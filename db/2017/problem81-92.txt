81,（テキスト文字列参照）文字列 s の長さを返す関数 int str_len(char s[]).

82, 文字列 s に含まれる文字 c の数を返す関数 int count_chars(char s[], char c).

83, 文字列 s1 と文字列 s2 が等しいかどうかを判定する関数 int str_eql(char s1[], char s2[]).

84, 二つの文字列 s1, s2 の先頭の n 文字が等しいかどうかを判定する関数 int str_eql_n(char s1[], char s2[], int n).

85, 文字列 s1 を文字列 s2 にコピーする関数 void str_copy(char s1[], char s2[]). s2 は s1 をコピーするに十分な長さがあると仮定してよい。

86, 文字列 s1 の後ろに文字列 s2 を連結する関数 void str_append(char s1[], char s2[]).

87, 文字列 s1 の n 文字目からの m 文字を s2 の先頭にコピーする関数 void str_take(char s1[], int n, int m, char s2[]).

88, 文字列 s1 中に文字列 s2 が出現するかどうかを判定する関数 int str_search(char s1[], char s2[]). s2 が s1 の何文字目から出現しているかを返そう。見つからなかった時は -1 を返せ。 

89, 文字列 s1 の n 文字目からの m 文字を削除する void str_remove(char s1[], int n, int m).

90, 文字列 s1 中に文字列 s2 が見つかる場合、s1 から s2 を削除する void str_remove_str(char s1[], char s2[]). 見つからない時？なにも削除しないよ。

91, 文字列 s1 の n 文字目に文字列 s2 を挿入する void str_insert(char s1[], int n, char s2[]).

92, 文字列 s1 中に現れる文字列 s2 を文字列 s3 で置き換える void str_subst(char s1[], char s2[], char s3[]).
